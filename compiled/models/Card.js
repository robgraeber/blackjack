// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Card = (function(_super) {
    __extends(Card, _super);

    function Card() {
      return Card.__super__.constructor.apply(this, arguments);
    }

    Card.prototype.initialize = function(params) {
      return this.set({
        revealed: true,
        value: !params.rank || 10 < params.rank ? 10 : params.rank,
        suitName: ['Spades', 'Diamonds', 'Clubs', 'Hearts'][params.suit],
        rankName: (function() {
          switch (params.rank) {
            case 0:
              return 'King';
            case 1:
              return 'Ace';
            case 11:
              return 'Jack';
            case 12:
              return 'Queen';
            default:
              return params.rank;
          }
        })()
      });
    };

    Card.prototype.flip = function() {
      this.set('revealed', !this.get('revealed'));
      return this;
    };

    Card.prototype.translate = function(suitName) {
      switch (suitName) {
        case 'Spades':
          return "&spades;";
        case 'Diamonds':
          return "&diams;";
        case 'Hearts':
          return "&hearts;";
        case 'Clubs':
          return "&clubs;";
      }
    };

    Card.prototype.translateValue = function() {
      switch (this.get('rankName')) {
        case 2:
          return "two";
        case 3:
          return "three";
        case 4:
          return "four";
        case 5:
          return "five";
        case 6:
          return "six";
        case 7:
          return "seven";
        case 8:
          return "eight";
        case 9:
          return "nine";
        case 10:
          return "ten";
        case "King":
          return "king";
        case "Ace":
          return "ace";
        case "Jack":
          return "jack";
        case "Queen":
          return "queen";
      }
    };

    return Card;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=Card.map
